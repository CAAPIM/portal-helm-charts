---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: analytics-server
  labels:
    name: analytics-server
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  {{- if and .Values.user.aggregationEnabled (lt .Values.analytics.replicaCount 2.0) }}
  replicas: 2
  {{- else}}
  replicas: {{ .Values.analytics.replicaCount }}
  {{- end}}
  selector:
    matchLabels:
      name: analytics-server
  template:
    metadata:
      labels:
        name: analytics-server
    spec:
      serviceAccountName:  portal-service-account
      initContainers:
        - name: liquidbase-upgrade-portal
          image: "{{ .Values.image.portalRepository }}{{ .Values.image.upgradeVerify }}"
          args: ["job", 'db-upgrade']
        - name: liquidbase-upgrade-rbac
          image: "{{ .Values.image.portalRepository }}{{ .Values.image.upgradeVerify }}"
          args: ["job", 'rbac-upgrade']
      containers:
        - name: analytics-server
          image: "{{ .Values.image.portalRepository }}{{ .Values.image.analytics }}"
          imagePullPolicy: "{{ .Values.analytics.image.pullPolicy }}"
          envFrom:
          - configMapRef:
              name: analytics-server-config
          readinessProbe:
            exec:
              command: [sh, /opt/app/diagnostic/health_check.sh]
            initialDelaySeconds: 90
            timeoutSeconds: 1
            periodSeconds: 15
            successThreshold: 1
          livenessProbe:
            exec:
              command: [sh, /opt/app/diagnostic/health_check.sh]
            initialDelaySeconds: 300
            timeoutSeconds: 1
            periodSeconds: 15
            successThreshold: 1
          ports:
            - containerPort: 9045

          resources:
            requests:
              cpu: 100m
              memory: 250Mi
            limits:
              cpu: 1000m
              memory: 2000Mi
      {{- if .Values.image.pullSecrets }}
      imagePullSecrets:
      - name: "{{ .Values.image.pullSecrets }}"
      {{- end }}
      dnsPolicy: "{{ .Values.analytics.dnsPolicy }}"
      restartPolicy: Always
      terminationGracePeriodSeconds: 30