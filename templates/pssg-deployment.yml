---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pssg
  labels:
    name: pssg
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  replicas: {{ .Values.pssg.replicaCount }}
  selector:
    matchLabels:
      name: pssg
  template:
    metadata:
      labels:
        name: pssg
    spec:
      serviceAccountName:  portal-service-account
      initContainers:
        - name: liquidbase-upgrade-portal
          image: "{{ .Values.image.portalRepository }}{{ .Values.image.upgradeVerify }}"
          args: ["job", 'db-upgrade']
        - name: liquidbase-upgrade-rbac
          image: "{{ .Values.image.portalRepository }}{{ .Values.image.upgradeVerify }}"
          args: ["job", 'rbac-upgrade']
      containers:
        - name: pssg
          image: "{{ .Values.image.portalRepository }}{{ .Values.image.pssg }}"
          imagePullPolicy: "{{ .Values.pssg.image.pullPolicy }}"
          envFrom:
          - configMapRef:
              name: pssg-config
          readinessProbe:
            exec:
              command: [sh, /opt/docker/diagnostic/health_check.sh]
            failureThreshold: 20
            initialDelaySeconds: 120
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
          livenessProbe:
            exec:
              command: [sh, /opt/docker/diagnostic/health_check.sh]
            failureThreshold: 20
            initialDelaySeconds: 120
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
          ports:
            - containerPort: 8080
            - containerPort: 8443
            - containerPort: 9446
            - containerPort: 9447
            - containerPort: 9448
          resources:
            requests:
              cpu: 100m
              memory: 2048Mi
            limits:
              cpu: 2000m
              memory: 4608Mi
      {{- if .Values.image.pullSecrets }}
      imagePullSecrets:
      - name: "{{ .Values.image.pullSecrets }}"
      {{- end }}
      dnsPolicy: "{{ .Values.pssg.dnsPolicy }}"
      restartPolicy: Always
      terminationGracePeriodSeconds: 60
