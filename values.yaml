# GKE Ingress
ingress:
  enabled: false

# Default for OpenShift. If deploying on GKE. Set route to false and ingress to true
# Openshift Route
route:
  enabled: true

analytics:
  replicaCount: 1
  dnsPolicy: ClusterFirst

  image:
    pullPolicy: Always

apim:
  replicaCount: 1
  dnsPolicy: ClusterFirst

  image:
    pullPolicy: Always

authenticator:
  replicaCount: 1
  dnsPolicy: ClusterFirst

  image:
    pullPolicy: Always

dispatcher:
  replicaCount: 1
  dnsPolicy: ClusterFirst

  image:
    pullPolicy: Always

portalData:
  replicaCount: 1
  dnsPolicy: ClusterFirst

  image:
    pullPolicy: Always

portalEnterprise:
  replicaCount: 1
  dnsPolicy: ClusterFirst

  image:
    pullPolicy: Always

portaldb:
  replicaCount: 1
  dnsPolicy: ClusterFirst

  image:
    pullPolicy: Always

pssg:
  replicaCount: 1
  dnsPolicy: ClusterFirst

  image:
    pullPolicy: Always

rabbitmq:
  replicaCount: 1
  dnsPolicy: ClusterFirst

  config:
    username: user
    password: 7layereyal7
    host: rabbitmq
    cookie: L7Secure
    port: 5672
    rmq_default_user: user
    rmq_default_password: 7layereyal7
    rmq_erlang_cookie: L7Secure

  image:
    pullPolicy: Always

smtp:
  replicaCount: 1
  dnsPolicy: ClusterFirst

  image:
    pullPolicy: Always

solr:
  replicaCount: 1
  dnsPolicy: ClusterFirst

  image:
    pullPolicy: Always

tenantProvisioner:
  replicaCount: 1
  dnsPolicy: ClusterFirst

  image:
    pullPolicy: Always
    
minio:
  replicaCount: 1
  dnsPolicy: ClusterFirst

  image:
    pullPolicy: Always

kafka:
  replicaCount: 1
  dnsPolicy: ClusterFirst

  image:
    pullPolicy: Always

zookeeper:
  replicaCount: 1
  dnsPolicy: ClusterFirst

  image:
    pullPolicy: Always

middlemanager:
  replicaCount: 1
  dnsPolicy: ClusterFirst

  image:
    pullPolicy: Always

ingestion:
  replicaCount: 1
  dnsPolicy: ClusterFirst

  image:
    pullPolicy: Always

  config:
    partitionCount: 1

broker:
  replicaCount: 1
  dnsPolicy: ClusterFirst

  image:
    pullPolicy: Always

coordinator:
  replicaCount: 1
  dnsPolicy: ClusterFirst

  image:
    pullPolicy: Always

historical:
  replicaCount: 1
  dnsPolicy: ClusterFirst

  image:
    pullPolicy: Always

image:
  portalRepository: apim-portal.packages.ca.com/apim-portal/
  pullPolicy: Always
  pullSecrets: bintray
  postgres: postgres:latest
  mysql: portaldb:latest
  smtp: smtp:4.5
  rabbitmq: message-broker:4.5
  dispatcher: dispatcher:4.5
  pssg: pssg:4.5
  apim: ingress:4.5
  enterprise: portal-enterprise:4.5
  data: portal-data:4.5
  tps: tenant-provisioning-service:4.5
  solr: solr:4.5
  analytics: analytics-server:4.5
  authenticator: authenticator:4.5
  dbUpgrade: db-upgrade-portal:4.5
  rbacUpgrade: db-upgrade-rbac:4.5
  ingestion: ingestion-server:4.5
  kafka: kafka:4.5
  zookeeper: zookeeper:4.5
  broker: druid:4.5
  coordinator: druid:4.5
  middlemanager: druid:4.5
  minio: minio:4.5
  historical: druid:4.5
  upgradeVerify: upgrade-verify:4.5
  
user:
  kubeNamespace: dev-portal
  legacyHostnames: false
  legacyDatabaseNames: false
  domain: example.com
  # the subdomain you would like to use for your external tenant. By providing a value, an ingress rule will be created for accessing
  analyticsEnabled: true
  ssoDebug: false
  enrollNotificationEmail: noreply@mail.example.com
  setupDemoDatabase: true
  databaseType: mysql
  databaseHost: portaldb
  databasePort: 3306
  databaseUsername: admin
  databasePassword: 7layer
  # If setupInternalSMTP is false, you should provide the creds and cert for your external smtp
  setupInternalSMTP: false
  smtpCert: notinstalled
  smtpHost: notinstalled
  smtpPassword: notinstalled
  smtpPort: notinstalled
  smtpRequireSSL: true
  smtpUsername: notinstalled
  hostnameWhitelist:
  defaultTenantId: apim
  papiUsername: papi
  papiPassword: 7layer

  telemetry:
    telemetry_pla_enabled: false
    telemetry_usage_type: PRODUCTION
    telemetry_domain_name:
    telemetry_site_id:
    telemetry_chargeback_id:
    telemetry_proxy_url:
    telemetry_proxy_username:
    telemetry_proxy_password:

secrets:
  apimSslKeyPass: certpass
  datalakeKeyPass: certpass
  dispatcherSslKeyPass: certpass
  dssgKeyPass: certpass
  pssgSslKeyPass: certpass
  tpsKeyPass: certpass

persistence:
  storage: 
    name: standard
    historical: 50Gi
    minio: 40Gi
    kafka: 10Gi
    zookeeper: 10Gi
